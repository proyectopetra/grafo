demo(package='igraph')
igraphdemo
igraphdemo()
igraphdemo("centrality")
igraphdemo()
igraphdemo("crashR")
igraphdemo()
igraphdemo("community")
quit()
png("grafo-tráfico.png")
source("traffic-graph.R")
dev.off()
quit()
source("traffic-graph.R")
quit()
g <- graph.ring(10)
g <- set.graph.attribute(g, "name", "RING")
g$name <- "RING"
g$name
 
g <- set.vertex.attribute(g, "color", value=c("red", "green"))
get.vertex.attribute(g, "color")
 
g <- set.edge.attribute(g, "weight", value=runif(ecount(g)))
get.edge.attribute(g, "weight")
 
g <- graph.star(10)
 
V(g)$color <- c("red", "green")
V(g)$color
 
E(g)$weight <- runif(ecount(g))
E(g)$weight
 
str(g, g=TRUE, v=TRUE, e=TRUE)
 
g2 <- graph.empty(10)
g2
 
graph.attributes(g2) <- graph.attributes(g)
vertex.attributes(g2) <- vertex.attributes(g)
edge.attributes(g2) <- list()
g2
 
edge.attributes(g2) <- list(weight=numeric())
g2
write.graph(g2,"ejemplo.txt",format="edgelist")
quit()
V(traffic.graph)
E(traffic.graph)
quit()
y
source("traffic-graph.R")
source("traffic-graph.R")
source("traffic-graph.R")
source("traffic-graph.R")
source("traffic-graph.R")
quit()
y
source("traffic-graph.R")
source("traffic-graph.R")
png("grafo-tráfico.png")
quit()
png("grafo-tráfico.png")
source("traffic-graph.R")
dev.off()
quit()
source("traffic-graph.R")
png("grafo-tráfico.png",width=1024,height=768)
source("traffic-graph.R")
dev.off()
quit()
png("grafo-tráfico.png",width=1024,height=768)
source("traffic-graph.R")
dev.off()
quit()
source("traffic-graph.R")
source("traffic-graph.R")
quit()
clusters(traffic.graph)
write.graph(traffic.graph,'traffic.graphml',format='graphml')
traffic.split <- decompose.graph(traffic.graph)
V(traffic.split[0])
V(traffic.split[1])
V(traffic.split[[1]])
V(traffic.split[[0]])
V(traffic.split[[2]])
V(traffic.split[[3]])
traffic.wifi <- traffic.split[[2]]
traffic.bt <- traffic.split[[1]]
plot(traffic.graph, layout = layout.fruchterman.reingold,
      vertex.size = 10,
      vertex.color="gray",
      vertex.frame.color= "white",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
plot(traffic.wifi, layout = layout.fruchterman.reingold,
      vertex.size = 10,
      vertex.color="gray",
      vertex.frame.color= "white",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
png("grafo-tráfico-wifi.png",width=1024,height=768)
plot(traffic.bt, layout = layout.fruchterman.reingold,
      vertex.size = 10,
      vertex.color="yellow",
      vertex.frame.color= "green",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
dev.off()
png("grafo-tráfico-bt.png",width=1024,height=768)
plot(traffic.bt, layout = layout.fruchterman.reingold,
      vertex.size = 10,
      vertex.color="yellow",
      vertex.frame.color= "green",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
dev.off()
png("grafo-tráfico-wifi.png",width=1024,height=768)
plot(traffic.wifi, layout = layout.fruchterman.reingold,
      vertex.size = 10,
      vertex.color="gray",
      vertex.frame.color= "white",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
dev.off()
quit()
betweenness(traffic.wifi)
betweenness(traffic.bt)
plot(traffic.wifi, layout = layout.fruchterman.reingold,
      vertex.size = betweenness(traffic.wifi),
      vertex.color="gray",
      vertex.frame.color= "white",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
plot(traffic.wifi, layout = layout.fruchterman.reingold,
      vertex.size = betweenness(traffic.wifi)+1,
      vertex.color="gray",
      vertex.frame.color= "white",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
betweenness(traffic.wifi)+1
betweenness(traffic.wifi)
betweenness(traffic.wifi)+5
plot(traffic.wifi, layout = layout.fruchterman.reingold,
      vertex.size = betweenness(traffic.wifi)+5,
      vertex.color="gray",
      vertex.frame.color= "white",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
plot(traffic.bt, layout = layout.fruchterman.reingold,
      vertex.size = betweenness(traffic.wifi)+5,
      vertex.color="yellow",
      vertex.frame.color= "green",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
plot(traffic.bt, layout = layout.fruchterman.reingold,
      vertex.size = betweenness(traffic.bt)+5,
      vertex.color="yellow",
      vertex.frame.color= "green",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
betweenness(traffic.bt)+5
betweenness(traffic.bt)
png("grafo-tráfico-wifi.png",width=1024,height=768)
plot(traffic.wifi, layout = layout.fruchterman.reingold,
      vertex.size = betweenness(traffic.wifi)+5,
      vertex.color="gray",
      vertex.frame.color= "white",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
dev.off()
png("grafo-tráfico-bt.png",width=1024,height=768)
plot(traffic.bt, layout = layout.fruchterman.reingold,
      vertex.size = betweenness(traffic.bt)+5,
      vertex.color="yellow",
      vertex.frame.color= "green",
      vertex.label.color = "blue",
      vertex.label.family = "sans",
      edge.width=log(E(traffic.graph)$weight),  
      edge.color="black")
def.off
dev.off()
quit()
